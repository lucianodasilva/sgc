name: cmake

on:
  push:
    branches: 
      - main
  pull_request:
    branches: 
      - main
  workflow_dispatch:
  
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
      shell: pwsh
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: New-Item -ItemType directory ${{github.workspace}}/build | Out-Null

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: pwsh
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: Invoke-Expression "cmake .. -DCMAKE_BUILD_TYPE=${env:BUILD_TYPE} -DSGC_UNIT_TESTS=ON"

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: pwsh
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config ${env:BUILD_TYPE}

    - name: Test
      working-directory: ${{github.workspace}}/build/tests
      shell: pwsh
      # Execute unit test executable
      run: Invoke-Expression "./sgc_unit_test -r junit" | Out-File -FilePath report.xml
      
    - name: Publish
      uses: EnricoMi/publish-unit-test-result-action@v1
      with:
        github_token: ${{secrets.GITHUB_TOKEN}}
        files: build/tests/*.xml
